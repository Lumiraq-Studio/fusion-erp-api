name: Build and Deploy

on:
  pull_request:
    branches:
      - main
      - dev
  push:
    branches:
      - main
      - dev

jobs:
  # 1️⃣ PR Build & Clean
  pr-build:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Build Docker image for PR
        run: |
          TAG="navoda-erp-api:pr-${{ github.event.pull_request.number }}"
          docker build -t $TAG .
          echo "Docker image built for PR: $TAG"

      - name: Clean up Docker images
        run: |
          docker image prune -af
          docker container prune -f

  # 2️⃣ Push to Docker Hub on Merge/Push
  push-to-docker:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'production' || 'development' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          # Extract branch name
          BRANCH=${GITHUB_REF#refs/heads/}
          # Set tag based on branch
          if [ "$BRANCH" == "main" ]; then
            TAG="your-dockerhub-username/navoda-erp-api:latest"
          else
            TAG="your-dockerhub-username/navoda-erp-api:dev"
          fi
          echo "Docker tag: $TAG"
          docker build -t $TAG .
          echo "TAG=$TAG" >> $GITHUB_ENV   # Save for later steps

      - name: Push Docker image to Docker Hub
        run: |
          docker push $TAG

      - name: Run Docker container
        run: |
          docker rm -f navoda-erp-api || true
          docker run -d \
            --name navoda-erp-api \
            -p 3000:3000 \
            -e NODE_ENV=${{ vars.NODE_ENV }} \
            -e APP_PROFILE=${{ vars.PROFILE }} \
            $TAG

      - name: Clean up dangling images/containers
        run: |
          docker image prune -af
          docker container prune -f
