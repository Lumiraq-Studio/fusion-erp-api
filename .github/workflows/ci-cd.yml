name: Build and Deploy

on:
  pull_request:
    branches:
      - main
      - dev
  push:
    branches:
      - main
      - dev

jobs:
  # 1️⃣ PR Build & Test
  pr-build:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Build Docker image for PR
        run: |
          TAG="navoda-erp-api:pr-${{ github.event.pull_request.number }}"
          docker build -t $TAG .
          echo "Docker image built for PR: $TAG"

      - name: Clean up Docker images
        run: |
          docker image prune -af
          docker container prune -f

  # 2️⃣ Push & Deploy Dev/Prod
  push-to-docker:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'production' || 'development' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}
          if [ "$BRANCH" = "main" ]; then
            TAG="lumiraqdev/navoda-erp-api:latest"
          else
            TAG="lumiraqdev/navoda-erp-api:dev"
          fi
          echo "Docker tag: $TAG"
          echo "TAG=$TAG" >> $GITHUB_ENV
          docker build -t $TAG .

      - name: Push Docker image
        run: docker push ${{ env.TAG }}

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            echo "Logging in to Docker Hub..."
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            BRANCH="${GITHUB_REF#refs/heads/}"
            if [ "$BRANCH" = "main" ]; then
              IMAGE_NAME="lumiraqdev/navoda-erp-api:latest"
              CONTAINER_NAME="navoda-erp-api-prod"
              PORT="3000:3000"
            else
              IMAGE_NAME="lumiraqdev/navoda-erp-api:dev"
              CONTAINER_NAME="navoda-erp-api-dev"
              PORT="3001:3000"
            fi

            echo "Pulling latest Docker image: $IMAGE_NAME"
            docker pull $IMAGE_NAME

            echo "Stopping old container (if exists): $CONTAINER_NAME"
            docker stop $CONTAINER_NAME || true
            docker rm $CONTAINER_NAME || true

            echo "Starting new container: $CONTAINER_NAME"
            docker run -d --restart unless-stopped --name $CONTAINER_NAME -p $PORT $IMAGE_NAME

            echo "Deployment completed. Running containers:"
            docker ps
