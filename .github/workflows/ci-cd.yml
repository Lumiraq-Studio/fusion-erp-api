name: Build, Test, and Docker Push

on:
  pull_request:
    branches:
      - main
      - dev
  push:
    branches:
      - main
      - dev

jobs:
  # PR Build & Test only
  pr-build:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

  # Docker Build & Push
  docker-build-push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set tags and profile
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
            echo "PROFILE=prod" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" = "dev" ]; then
            echo "IMAGE_TAG=dev" >> $GITHUB_ENV
            echo "PROFILE=dev" >> $GITHUB_ENV
          fi
          echo "COMMIT_TAG=${{ github.sha }}" >> $GITHUB_ENV
          echo "ðŸ”– Tags will be: ${{ secrets.DOCKER_USERNAME }}/fusion-erp-api:$IMAGE_TAG and :$COMMIT_TAG"

      - name: Build Docker image
        run: |
          echo "ðŸš€ Building Docker image for profile: $PROFILE"
          docker build \
            --build-arg PROFILE=$PROFILE \
            -f Dockerfile \
            -t ${{ secrets.DOCKER_USERNAME }}/fusion-erp-api:$IMAGE_TAG \
            -t ${{ secrets.DOCKER_USERNAME }}/fusion-erp-api:$COMMIT_TAG .

      - name: Push Docker images
        run: |
          echo "ðŸ“¤ Pushing Docker images..."
          docker push ${{ secrets.DOCKER_USERNAME }}/fusion-erp-api:$IMAGE_TAG
          docker push ${{ secrets.DOCKER_USERNAME }}/fusion-erp-api:$COMMIT_TAG
          echo "âœ… Images pushed successfully!"

      - name: Clean up dangling images/containers
        run: |
          echo "ðŸ§¹ Cleaning up Docker images and containers..."
          docker image prune -af
          docker container prune -f
          echo "âœ… Cleanup complete"
